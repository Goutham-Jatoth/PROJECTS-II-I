#include <stdio.h>
#include <string.h>

#define MAX_STUDENTS 20
#define MAX_SUBJECTS 5

// Union to store temporary data
union TempData {
    char name[50];
    int roll;
};

// Structure to store student details
struct Student {
    int rollNo;
    char name[50];
    int marks[MAX_SUBJECTS];
    int total;
    float average;
};

// Function to calculate total and average marks
void calculateTotalAndAverage(struct Student *s) {
    s->total = 0;
    for (int i = 0; i < MAX_SUBJECTS; i++) {
        s->total += s->marks[i];
    }
    s->average = (float)s->total / MAX_SUBJECTS;
}

int main() {
    struct Student students[MAX_STUDENTS];
    union TempData temp;

    int n;
    printf("Enter number of students (max 20): ");
    scanf("%d", &n);

    if (n > MAX_STUDENTS) {
        printf("Limit exceeded!\n");
        return 1;
    }

    // Input student details
    for (int i = 0; i < n; i++) {
        printf("\n--- Enter details of Student %d ---\n", i + 1);

        printf("Enter Roll Number: ");
        scanf("%d", &temp.roll);
        students[i].rollNo = temp.roll;

        printf("Enter Name: ");
        scanf(" %[^\n]", temp.name);
        strcpy(students[i].name, temp.name);

        printf("Enter marks in %d subjects:\n", MAX_SUBJECTS);
        for (int j = 0; j < MAX_SUBJECTS; j++) {
            printf("Subject %d: ", j + 1);
            scanf("%d", &students[i].marks[j]);
        }

        calculateTotalAndAverage(&students[i]);
    }

    // Display student details
    printf("\n===== STUDENT DETAILS =====\n");
    printf("RollNo\tName\t\tTotal\tAverage\n");
    printf("---------------------------------------------\n");

    for (int i = 0; i < n; i++) {
        printf("%d\t%-10s\t%d\t%.2f\n", students[i].rollNo, students[i].name, students[i].total, students[i].average);
    }

    // Calculate grand total and find highest scorer
    int grandTotal = 0;
    int highestMarks = students[0].total;
    int topperIndex = 0;

    for (int i = 0; i < n; i++) {
        grandTotal += students[i].total;

        if (students[i].total > highestMarks) {
            highestMarks = students[i].total;
            topperIndex = i;
        }
    }

    float classAverage = (float)grandTotal / n;

    printf("\n===== SUMMARY =====\n");
    printf("Total Marks of all %d students (all subjects combined): %d\n", n, grandTotal);
    printf("Class Average Marks: %.2f\n", classAverage);
    printf("Topper: %s (Roll No: %d) with %d marks\n",
           students[topperIndex].name,
           students[topperIndex].rollNo,
           students[topperIndex].total);

    return 0;
}















ðŸ§  Explanation
Concept	Description
Union TempData	Used to hold either roll or name temporarily (shows union usage).
Structure Student	Contains roll number, name, marks array, total, and average.
Pointer Function calculateTotalAndAverage()	Takes pointer to structure and computes total & average.
Array of Structures	Stores data for up to 20 students.
Finding Topper	Loops through to find the student with the highest total.













Enter number of students (max 20): 3

--- Enter details of Student 1 ---
Enter Roll Number: 101
Enter Name: Ramesh
Enter marks in 5 subjects:
Subject 1: 80
Subject 2: 75
Subject 3: 90
Subject 4: 85
Subject 5: 95

--- Enter details of Student 2 ---
Enter Roll Number: 102
Enter Name: Suresh
Enter marks in 5 subjects:
Subject 1: 70
Subject 2: 60
Subject 3: 75
Subject 4: 80
Subject 5: 85

--- Enter details of Student 3 ---
Enter Roll Number: 103
Enter Name: Mahesh
Enter marks in 5 subjects:
Subject 1: 60
Subject 2: 65
Subject 3: 70
Subject 4: 75
Subject 5: 80

===== STUDENT DETAILS =====
RollNo  Name        Total   Average
---------------------------------------------
101     Ramesh      425     85.00
102     Suresh      370     74.00
103     Mahesh      350     70.00

===== SUMMARY =====
Total Marks of all 3 students (all subjects combined): 1145
Class Average Marks: 381.67
Topper: Ramesh (Roll No: 101) with 425 marks
