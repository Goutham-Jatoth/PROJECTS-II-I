import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.io.*;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.HashMap;

public class LoginSystem extends JFrame {
    private JTextField userField;
    private JPasswordField passField;
    private JButton loginBtn, registerBtn;
    private JLabel statusLabel;

    private static final String DATA_FILE = "users.txt";
    private HashMap<String, String> users = new HashMap<>();

    public LoginSystem() {
        setTitle("🔐 Secure Login System");
        setSize(400, 250);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        setLayout(new GridLayout(5, 1, 10, 10));

        userField = new JTextField();
        passField = new JPasswordField();

        loginBtn = new JButton("Login");
        registerBtn = new JButton("Register");

        statusLabel = new JLabel("Enter username & password", JLabel.CENTER);

        add(new JLabel("👤 Username:", JLabel.CENTER));
        add(userField);
        add(new JLabel("🔑 Password:", JLabel.CENTER));
        add(passField);

        JPanel btnPanel = new JPanel();
        btnPanel.add(loginBtn);
        btnPanel.add(registerBtn);
        add(btnPanel);

        add(statusLabel);

        loadUsers();

        loginBtn.addActionListener(e -> login());
        registerBtn.addActionListener(e -> register());
    }

    private void loadUsers() {
        try (BufferedReader br = new BufferedReader(new FileReader(DATA_FILE))) {
            String line;
            while ((line = br.readLine()) != null) {
                String[] parts = line.split(":");
                if (parts.length == 2) {
                    users.put(parts[0], parts[1]);
                }
            }
        } catch (IOException e) {
            System.out.println("⚠️ No existing users found, starting fresh.");
        }
    }

    private void saveUsers() {
        try (PrintWriter pw = new PrintWriter(new FileWriter(DATA_FILE))) {
            for (String user : users.keySet()) {
                pw.println(user + ":" + users.get(user));
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error saving users!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private String hashPassword(String password) {
        try {
            MessageDigest md = MessageDigest.getInstance("SHA-256");
            byte[] hashBytes = md.digest(password.getBytes());
            StringBuilder sb = new StringBuilder();
            for (byte b : hashBytes) {
                sb.append(String.format("%02x", b));
            }
            return sb.toString();
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException(e);
        }
    }

    private void login() {
        String username = userField.getText().trim();
        String password = new String(passField.getPassword());

        if (username.isEmpty() || password.isEmpty()) {
            statusLabel.setText("⚠️ Please enter all fields!");
            return;
        }

        if (users.containsKey(username) && users.get(username).equals(hashPassword(password))) {
            statusLabel.setText("✅ Login successful! Welcome, " + username);
            if (username.equalsIgnoreCase("admin")) {
                JOptionPane.showMessageDialog(this, "Welcome Admin! You have full access.");
            } else {
                JOptionPane.showMessageDialog(this, "Welcome " + username + "! Limited user access.");
            }
        } else {
            statusLabel.setText("❌ Invalid username or password!");
        }
    }

    private void register() {
        String username = userField.getText().trim();
        String password = new String(passField.getPassword());

        if (username.isEmpty() || password.isEmpty()) {
            statusLabel.setText("⚠️ Please enter all fields!");
            return;
        }

        if (users.containsKey(username)) {
            statusLabel.setText("⚠️ Username already exists!");
        } else {
            users.put(username, hashPassword(password));
            saveUsers();
            statusLabel.setText("✅ Registered successfully! Now login.");
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> new LoginSystem().setVisible(true));
    }
}
