import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.*;

public class OnlineMedicalShopping extends JFrame {

    private JComboBox<String> diseaseCombo;
    private DefaultListModel<String> medicineListModel;
    private JList<String> medicineList;
    private JTextArea cartArea;
    private JButton addToCartButton, checkoutButton, showMedicinesButton;

    private Map<String, java.util.List<String>> diseaseMedicineMap;
    private Map<String, Integer> medicinePriceMap;
    private java.util.List<String> cart;

    public OnlineMedicalShopping() {
        initData();
        initUI();
    }

    private void initData() {
        cart = new ArrayList<>();
        diseaseMedicineMap = new LinkedHashMap<>();
        medicinePriceMap = new HashMap<>();

        // Disease â†’ medicines mapping
        diseaseMedicineMap.put("Fever", Arrays.asList("Paracetamol", "Dolo-650", "Crocin"));
        diseaseMedicineMap.put("Cold", Arrays.asList("Cetrizine", "Sinarest", "Vicks Inhaler"));
        diseaseMedicineMap.put("Headache", Arrays.asList("Saridon", "Disprin", "Ibuprofen"));
        diseaseMedicineMap.put("Diabetes", Arrays.asList("Metformin", "Glycomet", "Insulin"));
        diseaseMedicineMap.put("Hypertension", Arrays.asList("Amlodipine", "Telmisartan", "Losartan"));

        // Medicine prices
        medicinePriceMap.put("Paracetamol", 30);
        medicinePriceMap.put("Dolo-650", 40);
        medicinePriceMap.put("Crocin", 35);
        medicinePriceMap.put("Cetrizine", 25);
        medicinePriceMap.put("Sinarest", 50);
        medicinePriceMap.put("Vicks Inhaler", 60);
        medicinePriceMap.put("Saridon", 20);
        medicinePriceMap.put("Disprin", 15);
        medicinePriceMap.put("Ibuprofen", 45);
        medicinePriceMap.put("Metformin", 80);
        medicinePriceMap.put("Glycomet", 90);
        medicinePriceMap.put("Insulin", 250);
        medicinePriceMap.put("Amlodipine", 70);
        medicinePriceMap.put("Telmisartan", 100);
        medicinePriceMap.put("Losartan", 85);
    }

    private void initUI() {
        setTitle("ðŸ’Š Online Medical Shopping System");
        setSize(750, 500);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setLayout(new BorderLayout(10, 10));

        // Top panel: disease selection
        JPanel topPanel = new JPanel();
        topPanel.add(new JLabel("Select Disease:"));
        diseaseCombo = new JComboBox<>(diseaseMedicineMap.keySet().toArray(new String[0]));
        topPanel.add(diseaseCombo);
        showMedicinesButton = new JButton("Show Medicines");
        topPanel.add(showMedicinesButton);
        add(topPanel, BorderLayout.NORTH);

        // Center panel: medicines list + cart
        medicineListModel = new DefaultListModel<>();
        medicineList = new JList<>(medicineListModel);
        medicineList.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        JScrollPane medScroll = new JScrollPane(medicineList);
        medScroll.setBorder(BorderFactory.createTitledBorder("Available Medicines"));

        cartArea = new JTextArea();
        cartArea.setEditable(false);
        JScrollPane cartScroll = new JScrollPane(cartArea);
        cartScroll.setBorder(BorderFactory.createTitledBorder("ðŸ›’ Cart"));

        JPanel centerPanel = new JPanel(new GridLayout(1, 2, 10, 10));
        centerPanel.add(medScroll);
        centerPanel.add(cartScroll);
        add(centerPanel, BorderLayout.CENTER);

        // Bottom panel: action buttons
        JPanel bottomPanel = new JPanel();
        addToCartButton = new JButton("Add to Cart");
        checkoutButton = new JButton("Checkout");
        bottomPanel.add(addToCartButton);
        bottomPanel.add(checkoutButton);
        add(bottomPanel, BorderLayout.SOUTH);

        // Action listeners
        showMedicinesButton.addActionListener(e -> showMedicines());
        addToCartButton.addActionListener(e -> addToCart());
        checkoutButton.addActionListener(e -> checkout());

        showMedicines(); // Show initial medicines
        setLocationRelativeTo(null);
        setVisible(true);
    }

    private void showMedicines() {
        String disease = (String) diseaseCombo.getSelectedItem();
        java.util.List<String> meds = diseaseMedicineMap.getOrDefault(disease, Collections.emptyList());
        medicineListModel.clear();
        for (String med : meds) {
            int price = medicinePriceMap.getOrDefault(med, 0);
            medicineListModel.addElement(med + " - Rs " + price);
        }
    }

    private void addToCart() {
        java.util.List<String> selected = medicineList.getSelectedValuesList();
        if (selected.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please select one or more medicines.");
            return;
        }
        for (String item : selected) {
            String medName = item.split(" - ")[0].trim();
            cart.add(medName);
        }
        updateCart();
    }

    private void updateCart() {
        StringBuilder sb = new StringBuilder();
        int total = 0;
        for (String med : cart) {
            int price = medicinePriceMap.getOrDefault(med, 0);
            sb.append(med).append(" - Rs ").append(price).append("\n");
            total += price;
        }
        sb.append("\nTotal: Rs ").append(total);
        cartArea.setText(sb.toString());
    }

    private void checkout() {
        if (cart.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Cart is empty!");
            return;
        }
        int total = cart.stream().mapToInt(m -> medicinePriceMap.getOrDefault(m, 0)).sum();
        int confirm = JOptionPane.showConfirmDialog(this, "Place order? Total: Rs " + total, "Checkout", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            JOptionPane.showMessageDialog(this, "âœ… Order placed successfully!\nTotal Bill: Rs " + total);
            cart.clear();
            updateCart();
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> new OnlineMedicalShopping());
    }
}





















ðŸ“‘ Mini Project Report â€“ Online Medical Shopping System
1. Abstract

The Online Medical Shopping System is a GUI-based Java application where users can select a disease, view recommended medicines, add them to a cart, and place an order. The system simulates an online pharmacy by mapping diseases to relevant medicines and calculating the bill dynamically.

2. Objectives

To provide a digital medicine shopping solution.

To map diseases with relevant medicines.

To implement shopping cart functionality.

To use GUI programming (Swing & AWT) for user interaction.

3. Features

Disease selection with medicine suggestions.

Add to Cart functionality with bill calculation.

View Cart with running total.

Checkout with confirmation.

GUI interface for ease of use.

4. Tools & Technologies Used

Programming Language: Java (JDK 8 or above)

Libraries: Swing, AWT

Concepts: OOP, Event Handling, GUI Programming

5. Conclusion

The Online Medical Shopping System provides a simulation of digital pharmacy management. By integrating disease-to-medicine mapping and cart functionality, it demonstrates Java GUI, business logic, and event handling skills. This makes it an excellent project for both academic purposes and portfolio presentation.
